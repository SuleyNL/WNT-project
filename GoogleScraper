#pip install google-api-python-client google-auth-httplib2 google-auth-oauthlib
#pip install googlesearch-python

import time
from googlesearch import search
import requests
from datetime import datetime, timedelta
from selenium import webdriver
from math import floor
import Extra


def startProcess(year):
    print(getURLs(year))
    downloadWNTList()


def downloadWNTList():
    # It takes exactly 1 minute to download all the organisation names
    organisationList = []

    # start web browser
    browser = webdriver.Chrome()

    # get source code
    browser.get("https://www.topinkomens.nl/voor-wnt-instellingen/wnt-register")
    html = browser.page_source

    # wait for page to load
    time.sleep(1)

    # get all organisations
    table = browser.find_elements_by_css_selector('tr')
    i = 0
    for line in table:
        # skip first value (title)
        if i > 0:
            name = table[i].find_elements_by_css_selector('td')[0].text.replace("\n", "")
            organisation = clean(name) + "\n"

            organisationList.append(organisation)
        i = i + 1

    # Loop is over, write list to file
    g = open("Extra/WNT-List.txt", "w+")
    for organisation in organisationList:
        g.write(organisation)
        print(organisation)
    g.close()

    # close web browser
    browser.close()


def getURLs(year):
    #: This is the main method, it calls searchGoogle() to get links to pdfs and then outputs them to a file
    # determine file
    outputFile = "URLs-List/URLs-List-%s.txt" % year
    print(outputFile)
    i = 0
    # open inputFile
    with open('Extra/WNT-List.txt') as inputFile:
        inputLines = inputFile.readlines()

        # check if there is already some output so it can continue from there
        with open(outputFile, "r") as output:
            outputLines = output.readlines()
            if len(outputLines) > 0:
                i = int(outputLines[-1].split(":")[0].replace("\n", "")) + 1
            lastOutputLine = i
        print("i = " + str(i))
        # for every line in inputFile it outputs a line in outputFile
        while i < len(inputLines):
            print("___________________________________________________")
            g = open(outputFile, "a")
            foundPDFs = []

            # try except block to catch the report that occurs when we get blocked by google
            try:
                foundPDFs = searchGoogle(year, inputLines[i].replace("\n", ""))
                # proper formatting = [number]: [link1], [link2], [link3] \n
                text = str(i) + ":"
                for PDF in foundPDFs:
                    if foundPDFs.index(PDF) != 0:
                        text = text + ","
                    text = text + " " + PDF
                text = text + "\n"

                # write text to file
                g.write(text)
                g.close()
                print(text)

                # show progress on screen
                print(str(round((i/len(inputLines))*100, 2)) + "% Completed!")
                print("Total lines this session: " + str(i-int(lastOutputLine)))
                i = i+1
                print("Total batches this session: " + str(floor((i-int(lastOutputLine))/116)))

            # if we get blocked by google, wait 2hrs20mins to get unblocked
            except requests.HTTPError:
                print("Too many requests. Waiting 2hrs and 20min for next batch")
                nextBatchTime = datetime.now() + timedelta(hours=2.34)
                print("Next batch scheduled at: " + format(nextBatchTime, '%H:%M:%S'))
                time.sleep(60*60*2.34)
    print(str(round((i / len(inputLines)) * 100, 2)) + "% Completed!")
    return "[---------------------- THE END ------------------------]"


def searchGoogle(year, name):

    # prepare query you want to search, somehow didnt work if it was directly put into search() function
    template = "(Jaarverslag|Jaarrekening|WNT-verantwoording|Verslaggevingsdocument|Jaarstuk) -dnb.com -almanak.overheid.nl filetype:pdf"
    year = str(year)
    searchTerm = year + " " + name + " " + template

    # here it actually searches the web
    searchResults = search(searchTerm)

    print("searching for PDF of: " + name)
    print("in year: " + year)

    return searchResults[0:3]


def clean(organisationName):
    # some organisations (#163) had their names double, so here that gets cleaned up.
    # the only risk with this approach is if the organisation organisationName is symmetrical like 'grootoorg'.
    # in that case we should googlesearch both the half and the full organisationName
    # estimated risk chance is < 0.1%
    middleNumber = round(len(organisationName) / 2)

    # determine both halves of the organisation organisationName
    left = organisationName[0:middleNumber]
    right = organisationName[middleNumber:-1] + organisationName[-1]

    # see if both halves are the same, if yes: take the left half
    if left == right:
        organisationName = left

    # Some organisations have a colon in their organisationName
    # Windows doesnt accept this as a valid filename
    # You can either replace it with this "꞉"
    # Or you can replace it with something else entirely like in the code below
    afko = "afgekort: "
    afko2 = "verkorte naam:"
    if afko in organisationName:
        organisationName = organisationName.replace(afko, "(")
        organisationName += ")"
    elif afko2 in organisationName:
        organisationName = organisationName.replace(afko2, "(")
        organisationName += ")"

    # Some organisations also have a slash (/) in their name like number 60: Collectief Alblasserwaard/Vijfheerenlanden Coöperatieve U.A.
    # This breaks the code further down in the mapping system because it sees a slash (/) as a file in a directory
    # A solution to this would be to simply remove the slash or replace it for a unicode that looks like it
    # I chose to replace it for a backward slash (\), didnt work, windows also treats that as a file in a directory
    # Decided to replace backward slash for the word "and", forward slash for the word "en"
    slash = "/"
    slash2 = "\\"
    if slash in organisationName:
        organisationName = organisationName.replace(slash, " en ")
    elif slash2 in organisationName:
        organisationName = organisationName.replace(slash2, " en ")
    return organisationName


if __name__ == "__main__":
    startProcess(2020)

